variables:
  solution: 'linq2db.EFCore.sln'
  build_configuration: 'Release'
  assemblyVersion: 5.0.0
  nugetVersion: 5.0.0
  artifact_nugets: 'nugets'

# build on commits to important branches (master + release branches):
trigger:
  - master
  - release
# don't trigger pr builds by default, users should trigger them manually using /azp bot commands
# when we have multiple test runs waiting for free job, when nobody needs them
# we only want to trigger it for pr to release branch
pr:
  - master

stages:

#############################
#  Build and publish nugets #
#############################
- stage: ''
  displayName: ''
  jobs:
  - job: build_job
    pool:
      vmImage: 'windows-2019'
    variables:
      packageVersion: $(nugetVersion)
    displayName: 'Build'

    steps:

    - task: PowerShell@2
      inputs:
        filePath: '$(Build.SourcesDirectory)/Build/SetVersion.ps1'
        workingDirectory: '$(Build.SourcesDirectory)'
        arguments: -path $(Build.SourcesDirectory)/Build/linq2db.Default.props -version $(assemblyVersion)
      displayName: Update assembly version

    - task: MSBuild@1
      inputs:
        solution: '$(solution)'
        configuration: '$(build_configuration)'
        msbuildArguments: '/t:Restore;Rebuild -m'
      displayName: Build Solution

    - powershell: echo "##vso[task.setvariable variable=packageVersion]$(packageVersion)-rc.$(Build.BuildId)"
      condition: ne(variables['Build.SourceBranchName'], 'release')
      displayName: Set nuget RC version for non-release branch

    - task: PowerShell@2
      inputs:
        filePath: '$(Build.SourcesDirectory)/NuGet/BuildNuspecs.ps1'
        workingDirectory: '$(Build.SourcesDirectory)'
        arguments: -path $(Build.SourcesDirectory)/NuGet/linq2db.EntityFrameworkCore.nuspec -version $(packageVersion) -branch $(Build.SourceBranchName)
      displayName: Generate nuspec

    - task: NuGetToolInstaller@0
      inputs:
        versionSpec: '5.x'
        workingDirectory: $(Build.SourcesDirectory)/NuGet
      displayName: Install nuget

    - task: CmdLine@2
      inputs:
        script: 'nuget Pack linq2db.EntityFrameworkCore.nuspec -OutputDirectory built'
        workingDirectory: $(Build.SourcesDirectory)/NuGet
      displayName: Build nuget

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.SourcesDirectory)/NuGet/built'
        artifactName: '$(artifact_nugets)'
      displayName: Publish nugets to artifacts

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.SourcesDirectory)/NuGet/built/linq2db.EntityFrameworkCore.*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: '0dcc414b-ea54-451e-a54f-d63f05367c4b/967a4107-9788-41a4-9f6d-a2318aab1410'
      displayName: Publish to Azure Artifacts feed
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(Build.SourcesDirectory)/NuGet/built/linq2db.EntityFrameworkCore.*.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'linq2db nuget.org feed'
      displayName: Publish to Nuget.org
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'release'))
